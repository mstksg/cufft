# vim: nospell
language: generic
dist: trusty
sudo: true

matrix:
  include:
    - env: CUDA=6.5-14 GHC=7.6.3 CABAL=1.18
      compiler: "GHC 7.6"
      addons: { apt: { sources: [ hvr-ghc ], packages: [ ghc-7.6.3, cabal-install-1.18, happy-1.19.5, alex-3.1.7 ] }}

    - env: CUDA=7.0-28 GHC=7.6.3 CABAL=1.18
      compiler: "GHC 7.6"
      addons: { apt: { sources: [ hvr-ghc ], packages: [ ghc-7.6.3, cabal-install-1.18, happy-1.19.5, alex-3.1.7 ] }}

    - env: CUDA=7.5-18 GHC=7.6.3 CABAL=1.18
      compiler: "GHC 7.6"
      addons: { apt: { sources: [ hvr-ghc ], packages: [ ghc-7.6.3, cabal-install-1.18, happy-1.19.5, alex-3.1.7 ] }}

    - env: CUDA=6.5-14 GHC=7.8.4 CABAL=1.18
      compiler: "GHC 7.8"
      addons: { apt: { sources: [ hvr-ghc ], packages: [ ghc-7.8.4, cabal-install-1.18, happy-1.19.5, alex-3.1.7 ] }}

    - env: CUDA=7.0-28 GHC=7.8.4 CABAL=1.18
      compiler: "GHC 7.8"
      addons: { apt: { sources: [ hvr-ghc ], packages: [ ghc-7.8.4, cabal-install-1.18, happy-1.19.5, alex-3.1.7 ] }}

    - env: CUDA=7.5-18 GHC=7.8.4 CABAL=1.18
      compiler: "GHC 7.8"
      addons: { apt: { sources: [ hvr-ghc ], packages: [ ghc-7.8.4, cabal-install-1.18, happy-1.19.5, alex-3.1.7 ] }}

    - env: CUDA=6.5-14 GHC=7.10.3 CABAL=1.22
      compiler: "GHC 7.10"
      addons: { apt: { sources: [ hvr-ghc ], packages: [ ghc-7.10.3, cabal-install-1.22, happy-1.19.5, alex-3.1.7 ] }}

    - env: CUDA=7.0-28 GHC=7.10.3 CABAL=1.22
      compiler: "GHC 7.10"
      addons: { apt: { sources: [ hvr-ghc ], packages: [ ghc-7.10.3, cabal-install-1.22, happy-1.19.5, alex-3.1.7 ] }}

    - env: CUDA=7.5-18 GHC=7.10.3 CABAL=1.22
      compiler: "GHC 7.10"
      addons: { apt: { sources: [ hvr-ghc ], packages: [ ghc-7.10.3, cabal-install-1.22, happy-1.19.5, alex-3.1.7 ] }}

  allow_failures:
    - env: CUDA=7.5.18 GHC=head CABAL=head


before_install:
  - export PATH=/opt/ghc/$GHC/bin:/opt/cabal/$CABAL/bin:/opt/alex/3.1.7/bin:/opt/happy/1.19.5/bin:$HOME/.cabal/bin:$PATH

  # Need to install a newer version of the Cabal library in order to run the Setup.hs script
  - cabal update
  - cabal install Cabal --constraint="Cabal >= 1.22"
  - cabal install c2hs

  # Install the CUDA toolkit
  - echo "Installing CUDA library"
  - travis_retry wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_${CUDA}_amd64.deb
  - travis_retry sudo dpkg -i cuda-repo-ubuntu1404_${CUDA}_amd64.deb
  - travis_retry sudo apt-get update -qq
  - export CUDA_APT=${CUDA%-*}
  - export CUDA_APT=${CUDA_APT/./-}
#  - travis_retry sudo apt-get install -y cuda-${CUDA_APT}
  - travis_retry sudo apt-get install -y cuda-drivers cuda-core-${CUDA_APT} cuda-cudart-dev-${CUDA_APT} cuda-cufft-dev-${CUDA_APT}
  - travis_retry sudo apt-get clean
  - export CUDA_HOME=/usr/local/cuda-${CUDA%%-*}
  - export LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
  - export PATH=${CUDA_HOME}/bin:${PATH}

install:
  - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - cabal --version
  - c2hs --version
  - nvcc --version
  - cabal install --only-dependencies --enable-tests

script:
  # Check the build
  - cabal configure -v2 -flib-Werror
  - cabal build
  - cabal haddock
  # - cabal test --show-details=always

  # Check the source distribution can be generated, built, and installed
  - cabal sdist
  - |
      export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}')
      cd dist
      if [ -f "$SRC_TGZ" ]; then
          cabal install --force-reinstalls ${SRC_TGZ} || exit 1
      else
          echo "'$SRC_TGZ': not found"
          exit 1
      fi
after_failure:
  - dmesg
  - ls -R /usr/local/cuda*
